#include <stdio.h>

#define MAX_VERTICES 100

int adjMatrix[MAX_VERTICES][MAX_VERTICES];
int visited[MAX_VERTICES];
int stack[MAX_VERTICES];
int top = -1;

void dfs(int v, int vertices) {
    visited[v] = 1;
    for (int i = 0; i < vertices; i++) {
        if (adjMatrix[v][i] && !visited[i]) {
            dfs(i, vertices);
        }
    }
    stack[++top] = v;
}

void topologicalSort(int vertices) {
    for (int i = 0; i < vertices; i++) {
        visited[i] = 0;
    }
    for (int i = 0; i < vertices; i++) {
        if (!visited[i]) {
            dfs(i, vertices);
        }
    }
    printf("Topological Sorting: ");
    while (top != -1) {
        printf("%d ", stack[top--]);
    }
}

int main() {
    int vertices = 6;
    adjMatrix[5][2] = 1;
    adjMatrix[5][0] = 1;
    adjMatrix[4][0] = 1;
    adjMatrix[4][1] = 1;
    adjMatrix[2][3] = 1;
    adjMatrix[3][1] = 1;

    topologicalSort(vertices);

    return 0;
}
